version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - react-frontend
      - java-backend

  react-frontend:
    build:
      context: ./react-frontend
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm run dev"
    volumes:
      - ./react-frontend:/app
    working_dir: /app

  java-backend:
    build:
      context: .
      dockerfile: java-backend/Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
    depends_on:
      - db
    command: ["/wait-for-it.sh", "db:3306", "--", "java", "-jar", "app.jar"]

  db:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app_db
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./db_sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot" ]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - db

volumes:
  db_data:
