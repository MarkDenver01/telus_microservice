services:
  nginx:
    build:
      context: ./react-frontend
    container_name: nginx-proxy
    ports:
      - "80:80"
    depends_on:
      - react-frontend
      - java-backend

  react-frontend:
    build:
      context: ./react-frontend
    container_name: react-frontend
    ports:
      - "3000:80"
    volumes:
      - ./react-frontend:/app
    working_dir: /app

  java-backend:
    build:
      context: ./java-backend
    container_name: java-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/app_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      FRONT_END_URL: http://localhost
      BASE_URL: http://localhost
    depends_on:
      - mysql
    entrypoint: ["./wait-for-it.sh", "mysql:3306", "--", "java", "-jar", "target/java-backend-0.0.1-SNAPSHOT.jar"]

  mysql:
    image: mysql:8
    container_name: telus-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app_db
    volumes:
      - db_data:/var/lib/mysql
      - ./db_sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - mysql
volumes:
  db_data: